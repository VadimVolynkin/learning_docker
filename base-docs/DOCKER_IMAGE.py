# =============================================================================================================================
# DOCKER IMAGE
# =============================================================================================================================
Все слои образа - read only.
Создание контейнера - image(RO) + создание верхнего контейнерного слоя(RW), который хранит все изменения в файловой системе контейнера. При удалении контейнера все данные этого слоя удаляются. Несколько контейнеров используют 1 и тот же образ. 
Скорость и чтение данных в контейнерном слое ниже, чем у собственной файловой системы.
Слои можно найти здесь: /var/lib/docker/<storage-driver>

# =============================================================================================================================
# DOCKER IMAGE CLI
# =============================================================================================================================

docker image build -t my_image:my_tag .   # Собирает образ из Dockerfile
docker commit id_container my_image:my_tag# Создает новый образ из измененного контейнера
docker tag myimage:latest myimage:v1 	  # Указать тег для образа

docker history myimage 	                  # Отображает историю образа
docker inspect myimage                    # Показывает детальную информацию об одном ил нескольких образах

docker images 	                          # Список образов
docker image ls   	                      # Список образов

docker image import 	                  # Импортировать содержимое из архива, чтобы создать образ файловой системы
docker load 	                          # Загрузить образ из архива или STDIN
docker save 	                          # Сохраняет образ в архив(STDOUT by default)
docker search 	                          # Поиск образов в Docker Hub
docker pull                               # Пулл 
docker push                               # Пушит

docker rmi myimage 	                      # Удаляет один или несколько образов
docker rmi $(sudo docker images -q)       # удаляет все образы
docker image rm myimage  	              # Удаляет один или несколько образов
docker image prune                        # Удаляет неиспользуемые образы



# =============================================================================================================================
# MOST POPULAR IMAGE COMMANDS AND FLAGS
# =============================================================================================================================

docker image build -t my_repo/my_image:my_tag .   # соберет образ из dockerfile, взяв его из репозитория
docker image build -t my_image:my_tag .           # соберет образ из dockerfile

docker commit id_container my_image:my_tag        # создаем новый образ с тегом из измененного контейнера

docker image push my_repo/my_image:my_tag         # пушит образ в репозиторий

docker image ls                                   # список всех образов
docker images

docker image history my_image                     # сведения о промежуточных образах, входящих в состав образа
docker image inspect my_image                     # сведения об образе, в том числе — данные о слоях, из которых состоит образ

docker rmi $(docker image ls -q)                  # удаляет все образы из системы
docker image rm $(docker images -a -q)            # удаляет все локальные образы

docker tag my_image:latest my_image:v1            # создаем тег

-t, --tag                                         # назначить тег








